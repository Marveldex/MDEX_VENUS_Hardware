
void assert_nrf_callback(uint16_t line_num, const uint8_t * p_file_name);

static void gap_params_init(void);
static void nus_data_handler(ble_nus_t * p_nus, uint8_t * p_data, uint16_t length);
static void services_init(void);

static void on_conn_params_evt(ble_conn_params_evt_t * p_evt);
static void conn_params_error_handler(uint32_t nrf_error);
static void conn_params_init(void);

static void sleep_mode_enter(void);

static void on_adv_evt(ble_adv_evt_t ble_adv_evt);
static void advertising_init(void);
static void advertising_permanently_init(void);



static void on_ble_evt(ble_evt_t * p_ble_evt);

static void ble_evt_dispatch(ble_evt_t * p_ble_evt);
static void sys_evt_dispatch(uint32_t sys_evt);
static void ble_stack_init(void);

void bsp_event_handler(bsp_event_t event);
static void buttons_leds_init(bool * p_erase_bonds);

static uint32_t device_manager_evt_handler(dm_handle_t const * p_handle,
                                           dm_event_t const  * p_event,
                                           ret_code_t        event_result);
static void device_manager_init(bool erase_bonds);


void uart_event_handle(app_uart_evt_t * p_event);
static void uart_init(void);



void in_pin_handler(nrf_drv_gpiote_pin_t pin, nrf_gpiote_polarity_t action);
static void gpio_init(void);


static void timer01_venus_timeout_handler(void * p_context);

static void timer02_venus_timeout_handler(void * p_context);
static void venus_timer_config(void);
static void venus_app_init(void);
