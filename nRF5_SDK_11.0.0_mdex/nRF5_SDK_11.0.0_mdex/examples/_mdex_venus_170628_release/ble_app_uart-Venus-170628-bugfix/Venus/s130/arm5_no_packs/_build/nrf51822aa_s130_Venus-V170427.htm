<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\_build\nrf51822aa_s130_Venus-V170427.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\_build\nrf51822aa_s130_Venus-V170427.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Tue Jan 16 21:52:37 2018
<BR><P>
<H3>Maximum Stack Usage =        440 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; config_HW &rArr; config_gap_param_and_init_nus &rArr; advertising_init_forever &rArr; ble_advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[14]">CCM_AAR_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">CCM_AAR_IRQHandler</a><BR>
 <LI><a href="#[2e]">__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2e]">__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</a><BR>
 <LI><a href="#[2c]">__asm___6_main_c_bfce95c2__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c]">__asm___6_main_c_bfce95c2__nrf_delay_us</a><BR>
 <LI><a href="#[2d]">__asm___11_nrf_delay_c_532987f3__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2d]">__asm___11_nrf_delay_c_532987f3__nrf_delay_us</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[c]">ADC_IRQHandler</a> from main.o(i.ADC_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[14]">CCM_AAR_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[13]">ECB_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[b]">GPIOTE_IRQHandler</a> from nrf_drv_gpiote.o(i.GPIOTE_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[18]">LPCOMP_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[6]">POWER_CLOCK_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[17]">QDEC_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[7]">RADIO_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[12]">RNG_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[10]">RTC0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[16]">RTC1_IRQHandler</a> from app_timer.o(i.RTC1_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[9]">SPI0_TWI0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[a]">SPI1_TWI1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[19]">SWI0_IRQHandler</a> from app_timer.o(i.SWI0_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1a]">SWI1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1b]">SWI2_IRQHandler</a> from softdevice_handler.o(i.SWI2_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1c]">SWI3_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1d]">SWI4_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1e]">SWI5_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[20]">SystemInit</a> from system_nrf51.o(i.SystemInit) referenced from arm_startup_nrf51.o(.text)
 <LI><a href="#[11]">TEMP_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[d]">TIMER0_IRQHandler</a> from nrf_drv_timer.o(i.TIMER0_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[e]">TIMER1_IRQHandler</a> from nrf_drv_timer.o(i.TIMER1_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[f]">TIMER2_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[8]">UART0_IRQHandler</a> from nrf_drv_uart.o(i.UART0_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[15]">WDT_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[21]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from arm_startup_nrf51.o(.text)
 <LI><a href="#[24]">ble_evt_dispatch</a> from service_51822.o(i.ble_evt_dispatch) referenced from service_51822.o(i.ble_stack_init)
 <LI><a href="#[27]">conn_params_error_handler</a> from service_51822.o(i.conn_params_error_handler) referenced from service_51822.o(i.conn_params_init)
 <LI><a href="#[1f]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[28]">nus_data_handler</a> from service_51822.o(i.nus_data_handler) referenced from service_51822.o(i.services_init)
 <LI><a href="#[22]">on_adv_evt</a> from service_51822.o(i.on_adv_evt) referenced from service_51822.o(i.advertising_init_forever)
 <LI><a href="#[26]">on_conn_params_evt</a> from service_51822.o(i.on_conn_params_evt) referenced from service_51822.o(i.conn_params_init)
 <LI><a href="#[29]">softdevice_fault_handler</a> from softdevice_handler.o(i.softdevice_fault_handler) referenced from softdevice_handler.o(i.softdevice_handler_init)
 <LI><a href="#[25]">timer_mainloop_handler</a> from main.o(i.timer_mainloop_handler) referenced from main.o(i.config_timer1_mainloop)
 <LI><a href="#[23]">update_timeout_handler</a> from ble_conn_params.o(i.update_timeout_handler) referenced from ble_conn_params.o(i.ble_conn_params_init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[21]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[af]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[32]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b0]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[b1]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[b2]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[b3]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[b4]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[2c]"></a>__asm___6_main_c_bfce95c2__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, main.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_main_c_bfce95c2__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQ_ConfigAndGetValue_10bit_Delay81us
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_main_c_bfce95c2__nrf_delay_us
</UL>

<P><STRONG><a name="[2d]"></a>__asm___11_nrf_delay_c_532987f3__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, nrf_delay.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
</UL>

<P><STRONG><a name="[2e]"></a>__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app_timer.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>CCM_AAR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCM_AAR_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCM_AAR_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>ECB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>LPCOMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>POWER_CLOCK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>QDEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>RADIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RTC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SPI0_TWI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SPI1_TWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SWI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SWI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SWI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TEMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[b5]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;measure_adc_seat_16ch
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;measure_adc_battery_half
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_indication
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_data_encode
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manuf_specific_data_encode
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_addr_encode
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
</UL>

<P><STRONG><a name="[56]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
</UL>

<P><STRONG><a name="[b6]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[b7]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[b8]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[4a]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_peer_address_clear
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_enable_get_default_config
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init_forever
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_gap_param_and_init_nus
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;venus_packet_clear
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_char_add
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_char_add
</UL>

<P><STRONG><a name="[b9]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[85]"></a>strncpy</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_gap_param_and_init_nus
</UL>

<P><STRONG><a name="[8f]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
</UL>

<P><STRONG><a name="[9c]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_BLE_receive
</UL>

<P><STRONG><a name="[2b]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[ba]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[c]"></a>ADC_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(i.ADC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>ADC_IRQ_ConfigAndGetValue_10bit_Delay81us</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, main.o(i.ADC_IRQ_ConfigAndGetValue_10bit_Delay81us))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_IRQ_ConfigAndGetValue_10bit_Delay81us
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_main_c_bfce95c2__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;measure_adc_seat_16ch
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;measure_adc_battery_half
</UL>

<P><STRONG><a name="[81]"></a>DIP_SWITCH_check_state</STRONG> (Thumb, 52 bytes, Stack size 28 bytes, main.o(i.DIP_SWITCH_check_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DIP_SWITCH_check_state
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_HW
</UL>

<P><STRONG><a name="[b]"></a>GPIOTE_IRQHandler</STRONG> (Thumb, 312 bytes, Stack size 64 bytes, nrf_drv_gpiote.o(i.GPIOTE_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GPIOTE_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_is_set
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_sense_set
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>RTC1_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_timer.o(i.RTC1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RTC1_IRQHandler &rArr; timer_timeouts_check &rArr; app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SWI0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, app_timer.o(i.SWI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SWI0_IRQHandler &rArr; timer_list_handler &rArr; compare_reg_update &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SWI2_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, softdevice_handler.o(i.SWI2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SWI2_IRQHandler &rArr; intern_softdevice_events_execute &rArr; app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SystemInit</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, system_nrf51.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_manual_peripheral_setup_needed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[d]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, nrf_drv_timer.o(i.TIMER0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIMER0_IRQHandler &rArr; irq_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, nrf_drv_timer.o(i.TIMER1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIMER1_IRQHandler &rArr; irq_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UART0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, nrf_drv_uart.o(i.UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UART0_IRQHandler &rArr; uart_irq_handler &rArr; tx_done_event
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ble_srv_common.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_indication
</UL>

<P><STRONG><a name="[bb]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[bc]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[bd]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[3e]"></a>adv_data_encode</STRONG> (Thumb, 534 bytes, Stack size 48 bytes, ble_advdata.o(i.adv_data_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_list_encode
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_data_encode
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;name_encode
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manuf_specific_data_encode
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_role_encode
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_int_encode
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_addr_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
</UL>

<P><STRONG><a name="[4c]"></a>app_error_fault_handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_error_weak.o(i.app_error_fault_handler))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_fault_handler
</UL>

<P><STRONG><a name="[39]"></a>app_error_handler_bare</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, app_error.o(i.app_error_handler_bare))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_mode_enter
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_conn_params_evt
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_adv_evt
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_init
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_error_handler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init_forever
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nus_send_data_20
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_gap_param_and_init_nus
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_bsp_nus
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_timer1_mainloop
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2_IRQHandler
</UL>

<P><STRONG><a name="[60]"></a>app_timer_create</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, app_timer.o(i.app_timer_create))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
</UL>

<P><STRONG><a name="[4d]"></a>app_timer_init</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, app_timer.o(i.app_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_timer_init &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_bsp_nus
</UL>

<P><STRONG><a name="[50]"></a>app_timer_start</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, app_timer.o(i.app_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_op_alloc
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_id_get
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_indication
</UL>

<P><STRONG><a name="[54]"></a>app_timer_stop</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, app_timer.o(i.app_timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_timer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_op_alloc
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_id_get
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_indication
</UL>

<P><STRONG><a name="[55]"></a>ble_advdata_set</STRONG> (Thumb, 104 bytes, Stack size 96 bytes, ble_advdata.o(i.ble_advdata_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
</UL>

<P><STRONG><a name="[4b]"></a>ble_advertising_init</STRONG> (Thumb, 284 bytes, Stack size 16 bytes, ble_advertising.o(i.ble_advertising_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = ble_advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_peer_address_clear
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init_forever
</UL>

<P><STRONG><a name="[58]"></a>ble_advertising_on_ble_evt</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, ble_advertising.o(i.ble_advertising_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = ble_advertising_on_ble_evt &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[59]"></a>ble_advertising_start</STRONG> (Thumb, 482 bytes, Stack size 48 bytes, ble_advertising.o(i.ble_advertising_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;whitelist_has_entries
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_address_exists
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_peer_address_clear
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_access_status_get
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_queued_op_count_get
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_ble_evt
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_gap_param_and_init_nus
</UL>

<P><STRONG><a name="[5e]"></a>ble_conn_params_init</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, ble_conn_params.o(i.ble_conn_params_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_conn_params_init
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_init
</UL>

<P><STRONG><a name="[61]"></a>ble_conn_params_on_ble_evt</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, ble_conn_params.o(i.ble_conn_params_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ble_conn_params_on_ble_evt &rArr; conn_params_negotiation &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[66]"></a>ble_nus_init</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, ble_nus.o(i.ble_nus_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ble_nus_init &rArr; rx_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_char_add
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_char_add
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
</UL>

<P><STRONG><a name="[63]"></a>ble_nus_on_ble_evt</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, ble_nus.o(i.ble_nus_on_ble_evt))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[9b]"></a>ble_nus_string_send</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, ble_nus.o(i.ble_nus_string_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_nus_string_send
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nus_send_data_20
</UL>

<P><STRONG><a name="[65]"></a>bsp_btn_ble_on_ble_evt</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, bsp_btn_ble.o(i.bsp_btn_ble_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_btn_ble_on_ble_evt &rArr; advertising_buttons_configure
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_buttons_configure
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_to_button_action_assign
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[6f]"></a>bsp_btn_ble_sleep_mode_prepare</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp_btn_ble.o(i.bsp_btn_ble_sleep_mode_prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bsp_btn_ble_sleep_mode_prepare
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_wakeup_buttons_set
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_mode_enter
</UL>

<P><STRONG><a name="[48]"></a>bsp_event_to_button_action_assign</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bsp.o(i.bsp_event_to_button_action_assign))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_on_ble_evt
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_buttons_configure
</UL>

<P><STRONG><a name="[71]"></a>bsp_indication_set</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bsp.o(i.bsp_indication_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bsp_indication_set &rArr; bsp_led_indication &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_led_indication
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_mode_enter
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_adv_evt
</UL>

<P><STRONG><a name="[70]"></a>bsp_wakeup_buttons_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bsp.o(i.bsp_wakeup_buttons_set))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_sleep_mode_prepare
</UL>

<P><STRONG><a name="[76]"></a>config_4067_single_ch</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, main.o(i.config_4067_single_ch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = config_4067_single_ch
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;measure_adc_seat_16ch
</UL>

<P><STRONG><a name="[79]"></a>config_HW</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, main.o(i.config_HW))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = config_HW &rArr; config_gap_param_and_init_nus &rArr; advertising_init_forever &rArr; ble_advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_gap_param_and_init_nus
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_bsp_nus
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_venus_led_pins
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_venus_adc_block
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_venus_4067
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_timer1_mainloop
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_output_gpio_2pins
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_input_gpio_3switches
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIP_SWITCH_check_state
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[83]"></a>config_adc_each_port</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, main.o(i.config_adc_each_port))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = config_adc_each_port &rArr; nrf_adc_input_select
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_adc_input_select
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_venus_adc_block
</UL>

<P><STRONG><a name="[7a]"></a>config_bsp_nus</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, service_51822.o(i.config_bsp_nus))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = config_bsp_nus &rArr; app_timer_init &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_HW
</UL>

<P><STRONG><a name="[82]"></a>config_gap_param_and_init_nus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, service_51822.o(i.config_gap_param_and_init_nus))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = config_gap_param_and_init_nus &rArr; advertising_init_forever &rArr; ble_advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;services_init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init_forever
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_HW
</UL>

<P><STRONG><a name="[7b]"></a>config_input_gpio_3switches</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(i.config_input_gpio_3switches))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = config_input_gpio_3switches &rArr; nrf_gpio_cfg_input &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_HW
</UL>

<P><STRONG><a name="[80]"></a>config_output_gpio_2pins</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, main.o(i.config_output_gpio_2pins))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = config_output_gpio_2pins &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_HW
</UL>

<P><STRONG><a name="[7c]"></a>config_timer1_mainloop</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, main.o(i.config_timer1_mainloop))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = config_timer1_mainloop &rArr; nrf_drv_timer_extended_compare &rArr; nrf_drv_timer_compare
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_extended_compare
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_enable
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_HW
</UL>

<P><STRONG><a name="[7f]"></a>config_venus_4067</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(i.config_venus_4067))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = config_venus_4067 &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_HW
</UL>

<P><STRONG><a name="[7e]"></a>config_venus_adc_block</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(i.config_venus_adc_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = config_venus_adc_block &rArr; config_adc_each_port &rArr; nrf_adc_input_select
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_adc_each_port
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_HW
</UL>

<P><STRONG><a name="[7d]"></a>config_venus_led_pins</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, main.o(i.config_venus_led_pins))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = config_venus_led_pins &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_HW
</UL>

<P><STRONG><a name="[5b]"></a>fs_queued_op_count_get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fstorage.o(i.fs_queued_op_count_get))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>

<P><STRONG><a name="[3a]"></a>intern_softdevice_events_execute</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, softdevice_handler.o(i.intern_softdevice_events_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = intern_softdevice_events_execute &rArr; app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2_IRQHandler
</UL>

<P><STRONG><a name="[1f]"></a>main</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = main &rArr; config_HW &rArr; config_gap_param_and_init_nus &rArr; advertising_init_forever &rArr; ble_advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_HW
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[92]"></a>measure_adc_battery_half</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, main.o(i.measure_adc_battery_half))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = measure_adc_battery_half &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQ_ConfigAndGetValue_10bit_Delay81us
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_adc_input_select
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_adc_all_and_send_via_BLE
</UL>

<P><STRONG><a name="[93]"></a>measure_adc_seat_16ch</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, main.o(i.measure_adc_seat_16ch))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = measure_adc_seat_16ch &rArr; reorder_adc_scanned_buffer_VENUS
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reorder_adc_scanned_buffer_VENUS
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_4067_single_ch
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQ_ConfigAndGetValue_10bit_Delay81us
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_adc_input_select
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_adc_all_and_send_via_BLE
</UL>

<P><STRONG><a name="[95]"></a>nrf_delay_ms</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, nrf_delay.o(i.nrf_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_BLE_receive
</UL>

<P><STRONG><a name="[97]"></a>nrf_drv_common_irq_enable</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, nrf_drv_common.o(i.nrf_drv_common_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_drv_common_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_init
</UL>

<P><STRONG><a name="[96]"></a>nrf_drv_timer_compare</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, nrf_drv_timer.o(i.nrf_drv_timer_compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_timer_compare
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_extended_compare
</UL>

<P><STRONG><a name="[8d]"></a>nrf_drv_timer_enable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, nrf_drv_timer.o(i.nrf_drv_timer_enable))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_timer1_mainloop
</UL>

<P><STRONG><a name="[8c]"></a>nrf_drv_timer_extended_compare</STRONG> (Thumb, 46 bytes, Stack size 20 bytes, nrf_drv_timer.o(i.nrf_drv_timer_extended_compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = nrf_drv_timer_extended_compare &rArr; nrf_drv_timer_compare
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_timer1_mainloop
</UL>

<P><STRONG><a name="[8b]"></a>nrf_drv_timer_init</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, nrf_drv_timer.o(i.nrf_drv_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_drv_timer_init &rArr; nrf_drv_common_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_timer1_mainloop
</UL>

<P><STRONG><a name="[9a]"></a>nus_send_data_20</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, service_51822.o(i.nus_send_data_20))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = nus_send_data_20 &rArr; ble_nus_string_send
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_string_send
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;venus_packet_send
</UL>

<P><STRONG><a name="[99]"></a>on_BLE_receive</STRONG> (Thumb, 322 bytes, Stack size 8 bytes, main.o(i.on_BLE_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = on_BLE_receive &rArr; nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turn_led_off
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nus_data_handler
</UL>

<P><STRONG><a name="[5a]"></a>pstorage_access_status_get</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, pstorage.o(i.pstorage_access_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>

<P><STRONG><a name="[94]"></a>reorder_adc_scanned_buffer_VENUS</STRONG> (Thumb, 90 bytes, Stack size 88 bytes, main.o(i.reorder_adc_scanned_buffer_VENUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = reorder_adc_scanned_buffer_VENUS
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;measure_adc_seat_16ch
</UL>

<P><STRONG><a name="[9f]"></a>scan_adc_all_and_send_via_BLE</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, main.o(i.scan_adc_all_and_send_via_BLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = scan_adc_all_and_send_via_BLE &rArr; measure_adc_seat_16ch &rArr; reorder_adc_scanned_buffer_VENUS
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;venus_packet_send
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;venus_packet_clear
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;venus_packet_assemble
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;measure_adc_seat_16ch
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;measure_adc_battery_half
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_gatt_uart
</UL>

<P><STRONG><a name="[6c]"></a>sd_check_ram_start</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, softdevice_handler.o(i.sd_check_ram_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sd_check_ram_start
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[6e]"></a>softdevice_ble_evt_handler_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, softdevice_handler.o(i.softdevice_ble_evt_handler_set))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[6d]"></a>softdevice_enable</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, softdevice_handler.o(i.softdevice_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = softdevice_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[6b]"></a>softdevice_enable_get_default_config</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, softdevice_handler.o(i.softdevice_enable_get_default_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = softdevice_enable_get_default_config
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[29]"></a>softdevice_fault_handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, softdevice_handler.o(i.softdevice_fault_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = softdevice_fault_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> softdevice_handler.o(i.softdevice_handler_init)
</UL>
<P><STRONG><a name="[6a]"></a>softdevice_handler_init</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, softdevice_handler.o(i.softdevice_handler_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = softdevice_handler_init &rArr; sd_nvic_EnableIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[a4]"></a>timer1_loop_main</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(i.timer1_loop_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = timer1_loop_main &rArr; work_gatt_uart &rArr; scan_adc_all_and_send_via_BLE &rArr; measure_adc_seat_16ch &rArr; reorder_adc_scanned_buffer_VENUS
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_gatt_uart
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_mainloop_handler
</UL>

<P><STRONG><a name="[25]"></a>timer_mainloop_handler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, main.o(i.timer_mainloop_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = timer_mainloop_handler &rArr; timer1_loop_main &rArr; work_gatt_uart &rArr; scan_adc_all_and_send_via_BLE &rArr; measure_adc_seat_16ch &rArr; reorder_adc_scanned_buffer_VENUS
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_loop_main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.config_timer1_mainloop)
</UL>
<P><STRONG><a name="[9d]"></a>turn_led_off</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(i.turn_led_off))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_BLE_receive
</UL>

<P><STRONG><a name="[a1]"></a>venus_packet_assemble</STRONG> (Thumb, 100 bytes, Stack size 20 bytes, main.o(i.venus_packet_assemble))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = venus_packet_assemble
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_adc_all_and_send_via_BLE
</UL>

<P><STRONG><a name="[a0]"></a>venus_packet_clear</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, main.o(i.venus_packet_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = venus_packet_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_adc_all_and_send_via_BLE
</UL>

<P><STRONG><a name="[a2]"></a>venus_packet_send</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main.o(i.venus_packet_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = venus_packet_send &rArr; nus_send_data_20 &rArr; ble_nus_string_send
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nus_send_data_20
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_adc_all_and_send_via_BLE
</UL>

<P><STRONG><a name="[a5]"></a>work_gatt_uart</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(i.work_gatt_uart))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = work_gatt_uart &rArr; scan_adc_all_and_send_via_BLE &rArr; measure_adc_seat_16ch &rArr; reorder_adc_scanned_buffer_VENUS
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_adc_all_and_send_via_BLE
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_loop_main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[84]"></a>nrf_adc_input_select</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(i.nrf_adc_input_select))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_adc_input_select
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;measure_adc_seat_16ch
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;measure_adc_battery_half
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_adc_each_port
</UL>

<P><STRONG><a name="[98]"></a>nrf_gpio_cfg</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, main.o(i.nrf_gpio_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
</UL>

<P><STRONG><a name="[89]"></a>nrf_gpio_cfg_input</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, main.o(i.nrf_gpio_cfg_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = nrf_gpio_cfg_input &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_input_gpio_3switches
</UL>

<P><STRONG><a name="[8a]"></a>nrf_gpio_cfg_output</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, main.o(i.nrf_gpio_cfg_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_venus_led_pins
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_venus_4067
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_output_gpio_2pins
</UL>

<P><STRONG><a name="[77]"></a>nrf_gpio_pin_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(i.nrf_gpio_pin_clear))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_BLE_receive
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_4067_single_ch
</UL>

<P><STRONG><a name="[78]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(i.nrf_gpio_pin_set))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_BLE_receive
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_4067_single_ch
</UL>

<P><STRONG><a name="[49]"></a>advertising_init_forever</STRONG> (Thumb, 88 bytes, Stack size 168 bytes, service_51822.o(i.advertising_init_forever))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = advertising_init_forever &rArr; ble_advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_gap_param_and_init_nus
</UL>

<P><STRONG><a name="[24]"></a>ble_evt_dispatch</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, service_51822.o(i.ble_evt_dispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = ble_evt_dispatch &rArr; ble_advertising_on_ble_evt &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_on_ble_evt
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_on_ble_evt
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_ble_evt
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> service_51822.o(i.ble_stack_init)
</UL>
<P><STRONG><a name="[69]"></a>ble_stack_init</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, service_51822.o(i.ble_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_stack_init &rArr; softdevice_handler_init &rArr; sd_nvic_EnableIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_enable_get_default_config
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_enable
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_ble_evt_handler_set
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_check_ram_start
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_gap_param_and_init_nus
</UL>

<P><STRONG><a name="[27]"></a>conn_params_error_handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, service_51822.o(i.conn_params_error_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = conn_params_error_handler &rArr; app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> service_51822.o(i.conn_params_init)
</UL>
<P><STRONG><a name="[88]"></a>conn_params_init</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, service_51822.o(i.conn_params_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = conn_params_init &rArr; ble_conn_params_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_gap_param_and_init_nus
</UL>

<P><STRONG><a name="[86]"></a>gap_params_init</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, service_51822.o(i.gap_params_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gap_params_init &rArr; app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_gap_param_and_init_nus
</UL>

<P><STRONG><a name="[28]"></a>nus_data_handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, service_51822.o(i.nus_data_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nus_data_handler &rArr; on_BLE_receive &rArr; nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_BLE_receive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> service_51822.o(i.services_init)
</UL>
<P><STRONG><a name="[22]"></a>on_adv_evt</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, service_51822.o(i.on_adv_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = on_adv_evt &rArr; sleep_mode_enter &rArr; bsp_indication_set &rArr; bsp_led_indication &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_indication_set
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_mode_enter
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> service_51822.o(i.advertising_init_forever)
</UL>
<P><STRONG><a name="[64]"></a>on_ble_evt</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, service_51822.o(i.on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = on_ble_evt &rArr; bsp_indication_set &rArr; bsp_led_indication &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_indication_set
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[26]"></a>on_conn_params_evt</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, service_51822.o(i.on_conn_params_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = on_conn_params_evt &rArr; app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> service_51822.o(i.conn_params_init)
</UL>
<P><STRONG><a name="[87]"></a>services_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, service_51822.o(i.services_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = services_init &rArr; ble_nus_init &rArr; rx_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_gap_param_and_init_nus
</UL>

<P><STRONG><a name="[9e]"></a>sleep_mode_enter</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, service_51822.o(i.sleep_mode_enter))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sleep_mode_enter &rArr; bsp_indication_set &rArr; bsp_led_indication &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_indication_set
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_sleep_mode_prepare
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_adv_evt
</UL>

<P><STRONG><a name="[40]"></a>ble_device_addr_encode</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, ble_advdata.o(i.ble_device_addr_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_device_addr_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[43]"></a>conn_int_encode</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, ble_advdata.o(i.conn_int_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = conn_int_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[3f]"></a>le_role_encode</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, ble_advdata.o(i.le_role_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = le_role_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[44]"></a>manuf_specific_data_encode</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, ble_advdata.o(i.manuf_specific_data_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = manuf_specific_data_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[46]"></a>name_encode</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, ble_advdata.o(i.name_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = name_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[45]"></a>service_data_encode</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, ble_advdata.o(i.service_data_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = service_data_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[41]"></a>uint16_encode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_advdata.o(i.uint16_encode))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_data_encode
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manuf_specific_data_encode
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_int_encode
</UL>

<P><STRONG><a name="[42]"></a>uuid_list_encode</STRONG> (Thumb, 48 bytes, Stack size 48 bytes, ble_advdata.o(i.uuid_list_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_list_sized_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[ae]"></a>uuid_list_sized_encode</STRONG> (Thumb, 174 bytes, Stack size 48 bytes, ble_advdata.o(i.uuid_list_sized_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uuid_list_sized_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_list_encode
</UL>

<P><STRONG><a name="[57]"></a>ble_advertising_peer_address_clear</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ble_advertising.o(i.ble_advertising_peer_address_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_advertising_peer_address_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
</UL>

<P><STRONG><a name="[5c]"></a>peer_address_exists</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ble_advertising.o(i.peer_address_exists))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>

<P><STRONG><a name="[5d]"></a>whitelist_has_entries</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ble_advertising.o(i.whitelist_has_entries))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>

<P><STRONG><a name="[62]"></a>conn_params_negotiation</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, ble_conn_params.o(i.conn_params_negotiation))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = conn_params_negotiation &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_conn_params_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
</UL>

<P><STRONG><a name="[8e]"></a>is_conn_params_ok</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ble_conn_params.o(i.is_conn_params_ok))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
</UL>

<P><STRONG><a name="[23]"></a>update_timeout_handler</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, ble_conn_params.o(i.update_timeout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = update_timeout_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_conn_params.o(i.ble_conn_params_init)
</UL>
<P><STRONG><a name="[67]"></a>rx_char_add</STRONG> (Thumb, 158 bytes, Stack size 80 bytes, ble_nus.o(i.rx_char_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = rx_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_init
</UL>

<P><STRONG><a name="[68]"></a>tx_char_add</STRONG> (Thumb, 128 bytes, Stack size 72 bytes, ble_nus.o(i.tx_char_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tx_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_init
</UL>

<P><STRONG><a name="[35]"></a>channel_port_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.channel_port_get))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[36]"></a>nrf_gpio_cfg_sense_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.nrf_gpio_cfg_sense_set))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[34]"></a>nrf_gpiote_event_is_set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.nrf_gpiote_event_is_set))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[a9]"></a>nrf_uart_event_check</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrf_drv_uart.o(i.nrf_uart_event_check))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_irq_handler
</UL>

<P><STRONG><a name="[a8]"></a>nrf_uart_int_enable_check</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, nrf_drv_uart.o(i.nrf_uart_int_enable_check))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_irq_handler
</UL>

<P><STRONG><a name="[aa]"></a>rx_byte</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, nrf_drv_uart.o(i.rx_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rx_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_irq_handler
</UL>

<P><STRONG><a name="[ab]"></a>rx_done_event</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, nrf_drv_uart.o(i.rx_done_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rx_done_event
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_irq_handler
</UL>

<P><STRONG><a name="[ac]"></a>tx_byte</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, nrf_drv_uart.o(i.tx_byte))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_irq_handler
</UL>

<P><STRONG><a name="[ad]"></a>tx_done_event</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, nrf_drv_uart.o(i.tx_done_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tx_done_event
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_irq_handler
</UL>

<P><STRONG><a name="[3d]"></a>uart_irq_handler</STRONG> (Thumb, 278 bytes, Stack size 40 bytes, nrf_drv_uart.o(i.uart_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = uart_irq_handler &rArr; tx_done_event
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_done_event
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_byte
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_done_event
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_byte
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_int_enable_check
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_check
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[3c]"></a>irq_handler</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, nrf_drv_timer.o(i.irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = irq_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
</UL>

<P><STRONG><a name="[4f]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, app_timer.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
</UL>

<P><STRONG><a name="[75]"></a>compare_reg_update</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, app_timer.o(i.compare_reg_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = compare_reg_update &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler
</UL>

<P><STRONG><a name="[a6]"></a>elapsed_ticks_acquire</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_timer.o(i.elapsed_ticks_acquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = elapsed_ticks_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler
</UL>

<P><STRONG><a name="[a7]"></a>list_deletions_handler</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, app_timer.o(i.list_deletions_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = list_deletions_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler
</UL>

<P><STRONG><a name="[90]"></a>list_insertions_handler</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, app_timer.o(i.list_insertions_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = list_insertions_handler &rArr; timer_list_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler
</UL>

<P><STRONG><a name="[4e]"></a>rtc1_stop</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, app_timer.o(i.rtc1_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
</UL>

<P><STRONG><a name="[38]"></a>timer_list_handler</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, app_timer.o(i.timer_list_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = timer_list_handler &rArr; compare_reg_update &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insertions_handler
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_deletions_handler
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elapsed_ticks_acquire
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[53]"></a>timer_list_handler_sched</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_timer.o(i.timer_list_handler_sched))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
</UL>

<P><STRONG><a name="[91]"></a>timer_list_insert</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, app_timer.o(i.timer_list_insert))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_list_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insertions_handler
</UL>

<P><STRONG><a name="[37]"></a>timer_timeouts_check</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, app_timer.o(i.timer_timeouts_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = timer_timeouts_check &rArr; app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC1_IRQHandler
</UL>

<P><STRONG><a name="[51]"></a>user_id_get</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, app_timer.o(i.user_id_get))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>

<P><STRONG><a name="[52]"></a>user_op_alloc</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, app_timer.o(i.user_op_alloc))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>

<P><STRONG><a name="[a3]"></a>sd_nvic_EnableIRQ</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, softdevice_handler.o(i.sd_nvic_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sd_nvic_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_init
</UL>

<P><STRONG><a name="[72]"></a>bsp_led_indication</STRONG> (Thumb, 458 bytes, Stack size 40 bytes, bsp.o(i.bsp_led_indication))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = bsp_led_indication &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_indication_set
</UL>

<P><STRONG><a name="[47]"></a>advertising_buttons_configure</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, bsp_btn_ble.o(i.advertising_buttons_configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = advertising_buttons_configure
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_to_button_action_assign
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_on_ble_evt
</UL>

<P><STRONG><a name="[3b]"></a>is_manual_peripheral_setup_needed</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, system_nrf51.o(i.is_manual_peripheral_setup_needed))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
